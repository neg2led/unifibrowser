name: build-and-publish
on:
  workflow_dispatch:
  release:
    types: [published, created, edited]
  push:
    branches:
      - 'main'
      - 'release/**'

concurrency:
  group: ${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: 'unifibrowser'
  IMAGE_TAG: 'latest'

jobs:
  buildx:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Prepare
        id: prep
        run: |
          TAG=$(echo $GITHUB_SHA | head -c7)
          IMAGE=${{ format('{0}/{1}', github.repository_owner, env.IMAGE_NAME) }}
          echo ::set-output name=tagged_image::${IMAGE}:${TAG}
          echo ::set-output name=tag::${TAG}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build images
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
          builder: ${{ steps.buildx.outputs.name }}
          push: false
          tags: ${{ steps.prep.outputs.tagged_image }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Log in to Docker Hub
        if: ${{ contains(github.event_name, 'release') && success() }}
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Push images
        if: ${{ contains(github.event_name, 'release') && success() }}
        uses: docker/build-push-action@v2
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm/v7,linux/arm/v6
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ steps.prep.outputs.tagged_image }}
          cache-from: type=gha

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ format('{0}/{1}:{2}', github.repository_owner, env.IMAGE_NAME, env.IMAGE_TAG ) }}
